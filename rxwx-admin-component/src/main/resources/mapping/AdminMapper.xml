<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rxwx.admin.mapper.AdminMapper">


	<resultMap id="baseResultMap" type="com.rxwx.model.Admin">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="account" property="account" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="age" property="age" jdbcType="INTEGER" />
		<result column="sex" property="sex" jdbcType="INTEGER" />
		<result column="createTime" property="sex" jdbcType="DATE" />
		<result column="status" property="status" jdbcType="INTEGER" />
	</resultMap>

	<sql id="baseColumnList">
		id,account,name,password,phone,email,age,sex,createTime,status
	</sql>
	
	<sql id="select_where" >
    where 1 = 1
    <if test="vo.id != null">
        and id=#{vo.id}
    </if>     
    <if test="vo.account != null and vo.account != ''">
        and account=#{vo.account}
    </if> 
     <if test="vo.name!= null and vo.name != ''">
        and name=#{vo.name}
    </if>
    <if test="vo.password != null and vo.password != ''">
        and password=#{vo.password}
    </if>         
    <if test="vo.sex != null and vo.sex != ''">
        and sex=#{vo.sex}
    </if>   
    <if test="vo.email != null and vo.email != ''">
        and email=#{vo.email}
    </if> 
    <if test="vo.status != null and vo.status != ''">
        and status=#{vo.status}
    </if> 
    <if test="vo.phone != null and vo.phone != ''">
        and phone=#{vo.phone}
    </if> 
  </sql>
	

	<select id="findList" resultMap="baseResultMap">
		select <include refid="baseColumnList" /> from admin
	</select>
	


	<select id="findByAccount" parameterType="java.lang.String" resultType="com.rxwx.model.Admin">
		select <include refid="baseColumnList" /> from admin where account = #{account}
	</select>

	 <select id="findRoles" parameterType="java.lang.String" resultType="java.lang.String">
	 select r.name from admin a , admin_role ar , role r where ar.admin_id = a.id and ar.role_id = r.id and a.account = #{account} group by r.name 
  	 
    </select>

    <select id="findResources" parameterType="java.lang.String" resultType="java.lang.String">
		select res.name  from admin a, role r, resource res, admin_role ar, role_resource rr where a.account=#{account} and a.id=ar.admin_id  and r.id=ar.role_id and r.id=rr.role_id and res.id=rr.resource_id group by res.name
   </select>
   
   
   <select id="findAdminResourceVo" parameterType="java.lang.Integer" resultType="com.rxwx.vo.AdminResourceVo">
   		select ress.* , mr.menu_id menuId  from (select res.* from admin a , admin_role ar , role r ,role_resource rr , resource res 
			where ar.admin_id = a.id and ar.role_id = r.id 
				and rr.role_id = r.id
				and rr.resource_id = res.id
				and res.type=0
			and a.id =  #{adminId})ress left join menu_resource mr on mr.resource_id = ress.id
   </select>

</mapper>
